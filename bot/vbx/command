#!/bin/bash

########################################################################
# Copyright 2016 vbextreme <vbextreme.vbextreme@gmail.com>             #
#                                                                      #
# This program is free software; you can redistribute it and/or modify #
# it under the terms of the GNU General Public License as published by #
# the Free Software Foundation; either version 2 of the License, or    #
# (at your option) any later version.                                  #
#                                                                      #
# This program is distributed in the hope that it will be useful,      #
# but WITHOUT ANY WARRANTY; without even the implied warranty of       #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        #
# GNU General Public License for more details.                         #
#                                                                      #
# You should have received a copy of the GNU General Public License    #
# along with this program; if not, write to the Free Software          #
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,           #
# MA 02110-1301, USA.                                                  #
#                                                                      #
########################################################################

FILE_LOG="$BOT_PREFIX/$BOT_NAME/bot.log"

#log $1(info, warning, error) $2 message
function log(){
	dt=$(date)
	echo "[$dt ++ ${CHAT[USERNAME]} ++ ${USER[USERNAME]} ++ ${USER[ID]}] $1: $2" >> $FILE_LOG
}	

function special_command(){
	get_chat_member ${CHAT[ID]} ${USER[ID]}
	
	if [[ ${CHATMEMBER[OK]} != "true" ]]; then
		echo "fail ok"
		return 1
	fi
	
	if [[ ${CHATMEMBER[STATUS]} != creator && ${CHATMEMBER[STATUS]} != administrator ]]; then
		echo "fail status"
		return 2
	fi
	
	CMD=$(echo $MESSAGE | cut -f2 -d\  )
	
	case $CMD in
		'ping')
			send_normal_message ${CHAT[ID]} "pong"
		;;		
		'update')
			send_normal_message ${CHAT[ID]} "$ start update ..."
			cd ..
			git pull > /dev/null
			cd ./core
			send_normal_message ${CHAT[ID]} "$ update complete"
			nohup ./bashbot.sh -b "$BOT_NAME" &
			send_normal_message ${CHAT[ID]} "$ reboot"
			kill $CORE_PID
			exit 0
		;;
		'log')
			local RP=$(cat $FILE_LOG)
			send_normal_message "${CHAT[ID]}" "$RP"
		;;		
		*)
			log "warning" "unavailable $ command '$MESSAGE'"
		;;
	esac
	
	return 0
}

function chan_command(){
	get_chat_member ${CHAT[ID]} ${USER[ID]}
	
	if [[ ${CHATMEMBER[OK]} != "true" ]]; then
		return 1
	fi
	
	CMD=$(echo $MESSAGE | cut -f1 -d\  )
	
	if [[ ${CHATMEMBER[STATUS]} == creator || ${CHATMEMBER[STATUS]} == administrator ]]; then
		case $CMD in
			'/start')
			;;
				
			'/ban')
				kick_chat_member "${CHAT[ID]}" "${MESSAGE[FROM_ID]}"
				send_normal_message "${CHAT[ID]}" "$ ban $MESSAGE[FROM_USERNAME]"
			;;
				
			'/kick')
				kick_chat_member "${CHAT[ID]}" "${MESSAGE[FROM_ID]}"
				unban_chat_member "${CHAT[ID]}" "${MESSAGE[FROM_ID]}"
				send_normal_message "${CHAT[ID]}" "\$ kick ${MESSAGE[FROM_USERNAME]}"
			;;
				
			*)
				log "warning" "unavailable / command '$MESSAGE'"
			;;
		esac
	else
		case $CMD in
			'/part'|'/suicide'|'/suicidegirls')
				kick_chat_member "${CHAT[ID]}" "${USER[ID]}"
				unban_chat_member "${CHAT[ID]}" "${USER[ID]}"
				send_normal_message "${CHAT[ID]}" "\$ kick ${USER[USERNAME]}"
			;;
				
			*)
				log "warning" "unavailable / command '$MESSAGE'"
			;;
		esac
	fi
	
	return 0
}
	
if [[ ${MESSAGE:0:1} == "$"  ]]; then
	special_command
elif [[ ${MESSAGE:0:1} == "/" ]]; then
	chan_command
fi
